
<script>
    const updateQuestion = (questionId) => {
        const question = document.getElementById(`question_${questionId}`).value;
        const description = document.getElementById(`description_${questionId}`).value;
        const url = `/elections/<%= election.id %>/questions/${questionId}`;
        const data = {
            _csrf: '<%= csrfToken %>',
            question,
            description
        };
        fetch(url, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(async res => {
            if (res.status !== 200) {
                const json = await res.json();
                showMessage(json.errors, 'error');
            }else{
                location.reload();
                //showMessage([{ message : 'Question updated'}], 'success');
            }
        });
    }
    const deleteQuestion = (questionId) => {
        const url = `/elections/<%= election.id %>/questions/${questionId}`;
        const data = {
            _csrf: '<%= csrfToken %>'
        };
        fetch(url, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(async res => {
            if (res.status !== 200) {
                const json = await res.json();
                showMessage(json.errors, 'error');
            } else {
                location.reload();
            }
        });
    }
    const updateOption = (questionId, optionId) => {
        const option = document.getElementById(`option_${optionId}`).value;
        const url = `/elections/<%= election.id %>/questions/${questionId}/options/${optionId}`;
        const data = {
            _csrf: '<%= csrfToken %>',
            option
        };
        fetch(url, {
            method: 'PATCH',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(async res => {
            if (res.status !== 200) {
                const json = await res.json();
                showMessage(json.errors, 'error');
            }else{
                location.reload();
                //showMessage([{ message : 'Option updated'}], 'success');
            }
        });
    }
    const deleteOption = (questionId, optionId) => {
        const url = `/elections/<%= election.id %>/questions/${questionId}/options/${optionId}`;
        const data = {
            _csrf: '<%= csrfToken %>'
        };
        fetch(url, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        }).then(async res => {
            if (res.status !== 200) {
                const json = await res.json();
                showMessage(json.errors, 'error');
            } else {
                location.reload();
            }
        });
    }
</script>

<%= questions.length %> Questions
<br>
<br>
<div class="">
    <form action="/elections/<%= election.id %>/questions" method="post" class="flex items-center justify-between gap-4">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <input type="text" name="question" placeholder="New Question" class="w-full">
        <button class="bg-rose-600 text-black hover:bg-rose-700 hover:text-black px-5 py-2 rounded-lg shrink-0 text-xl font-bold">Add Question</button>
    </form>
    <br>
    <br>
    <% for (let i = 0; i < questions.length; i++) { %>
        <%- include('question.ejs', {question : questions[i], index: i}) %>
    <% } %> 
</div>
